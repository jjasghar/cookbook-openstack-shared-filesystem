# coding: utf-8
[keystone_authtoken]
signing_dir = /var/cache/manila
admin_password = %password_we_used_with_user_creation_operation%
admin_user = manila
admin_tenant_name = %service_project_name_we_used_with_user_creation_operation%
auth_protocol = http
auth_port = 35357
auth_host = %address_of_machine_with_keystone_endpoint%

[DATABASE]
# Set up MySQL connection. In following  ‘foo’ is username,
# ‘bar’ is password and ‘quuz’ is host name or address:
connection = mysql+pymysql://foo:bar@quuz/manila?charset=utf8

[oslo_concurrency]
# Following opt defines directory to be used for lock files creation.
# Should be owned by user that runs manila-share processes.
# Defaults to env var ‘OSLO_LOCK_PATH’. It is used by manila-share services
# and is required to be set up. Make sure this dir is created and owned
# by user that run manila-share services.
lock_path = /etc/manila/custom_manila_lock_path

[DEFAULT]
# Set pretty logging output. Not required, but may be useful.
logging_exception_prefix = %(color)s%(asctime)s.%(msecs)d TRACE %(name)s ^[[01;35m%(instance)s^[[00m
logging_debug_format_suffix = ^[[00;33mfrom (pid=%(process)d) %(funcName)s %(pathname)s:%(lineno)d^[[00m
logging_default_format_string = %(asctime)s.%(msecs)d %(color)s%(levelname)s %(name)s [^[[00;36m-%(color)s] ^[[01;35m%(instance)s%(color)s%(message)s^[[00m
logging_context_format_string = %(asctime)s.%(msecs)d %(color)s%(levelname)s %(name)s [^[[01;36m%(request_id)s ^[[00;36m%(user_id)s %(project_id)s%(color)s] ^[[01;35m%(instance)s%(color)s%(message)s^[[00m

# Set auth strategy for usage of Keystone
auth_strategy = keystone

# Set message bus creds
rabbit_userid = %rabbit_username%
rabbit_password = %rabbit_user_password%
rabbit_hosts = %address_of_machine_with_rabbit%
rpc_backend = rabbit

# Following opt is used for definition of share backends that should be enabled.
# Values are conf groupnames that contain per manila-share service opts.
enabled_share_backends = london

# Enable protocols ‘NFS’ and ‘CIFS’ as those are the only supported
# by Generic driver that we are configuring in this set up.
# All available values are (‘NFS’, ‘CIFS’, ‘GlusterFS’, ‘HDFS’)
enabled_share_protocols = NFS,CIFS

# Following is password for user ‘neutron’ for interaction with Neutron.
# It is required only when Neutron is set up in lab, and handling of
# share servers is used within configured share drivers.
neutron_admin_password = %password%

# Following is password for user ‘cinder’ for interaction with Cinder service.
# Used only by Generic driver.
cinder_admin_password = %password%

# Following is password for user ‘nova’ for interaction with Nova service.
# Used only by Generic driver for the moment.
nova_admin_password = %password%

# Set the project/tenant name of the ‘service’ tenant. These should all be the
# same value, but may be different than the default.
neutron_admin_project_name = service
cinder_admin_tenant_name = service
nova_admin_tenant_name = service

# Manila requires ‘share-type’ for share creation.
# So, set here name of some share-type that will be used by default.
default_share_type = default_share_type

state_path = /opt/stack/data/manila
osapi_share_extension = manila.api.contrib.standard_extensions
rootwrap_config = /etc/manila/rootwrap.conf
api_paste_config = /etc/manila/api-paste.ini
share_name_template = share-%s

# Set scheduler driver with usage of filters. Recommended.
scheduler_driver = manila.scheduler.filter_scheduler.FilterScheduler

# Set following two opts to ‘True’ to get maximum info in logging.
verbose = True
debug = True

[london]
# This is custom opt group that is used for storing opts of share-service.
# This one is used only when enabled using opt `enabled_share_backends`
# from DEFAULT group.

# Set usage of Generic driver which uses Cinder as backend.
share_driver = manila.share.drivers.generic.GenericShareDriver

# Generic driver supports both driver modes - with and without handling
# of share servers. So, we need to define explicitly which one we are
# enabling using this driver.
driver_handles_share_servers = True

# Generic driver is the only driver that uses image from Glance for building
# service VMs in Nova. And following are data for some specific image.
# We used one defined in [1]
# [1] https://github.com/openstack/manila/blob/6785cad9/devstack/plugin.sh#L86
service_instance_password = ubuntu
service_instance_user = ubuntu
service_image_name = ubuntu_1204_nfs_cifs

# These will be used for keypair creation and inserted into service VMs.
path_to_private_key = /home/stack/.ssh/id_rsa
path_to_public_key = /home/stack/.ssh/id_rsa.pub

# Custom name for share backend.
share_backend_name = LONDON
